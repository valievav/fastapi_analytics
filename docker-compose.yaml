services:
  app:
    # implements docker command `docker build -t analytics-api -f Dockerfile .`
    image: analytics-api:v1
    build:
      context: .
      dockerfile: Dockerfile

    # app exposed at port (container port), specified DATABASE_URL (from db_service portion)
#    environment:
#      - PORT=8002
#      - DATABASE_URL=postgresql+psycopg://time_user:time_pw@db_service:5432/timescale_analytics_db

    # env file params will be rewritten with docker-compose environment params if both have the same name, like DATABASE_URL
    env_file:
      - .env.compose

    # host port: container port
    ports:
      - "8002:8002"

    # run light-weight uvicorn for dev mode (overrides dockerfile `CMD ["/opt/run.sh"]`, which is PROD setup)
    command: uvicorn main:app --host 0.0.0.0 --port 8002 --reload

    # storage with read-write permissions (rw), other option is read-only (ro)
    volumes:
      - ./src:/code:rw

    # watch for changes in certain files and rebuild container if changes are detected
    develop:
      watch:
        - action: rebuild
          path: Dockerfile
        - action: rebuild
          path: requirements.txt
        - action: rebuild
          path: compose.yaml

    # start after db
    depends_on:
      db_service:
        condition: service_healthy

  # setup timescaledb (postgresdb for time-series data)
  db_service:
    image: timescale/timescaledb:latest-pg17
    environment:
      - POSTGRES_USER=time_user
      - POSTGRES_PASSWORD=time_pw
      - POSTGRES_DB=timescale_analytics_db
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U time_user -d timescale_analytics_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    # to save pgadmin config
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db_service
    restart: unless-stopped

volumes:
  timescaledb_data:
  pgadmin_data: